/**
    Un gruppo di amici festeggia in un pub con B bottiglie di birra. 
    
    Il garzone del pub aggiunge una bottiglia di birra ogni volta che riscontra personalmente 
    che una bottiglia è vuota;
    Egli agisce in modo prioritario rispetto agli amici. 
    
    Gli amici hanno concordato di accedere alle B bottiglie di birra per non più di N volte consecutive
    ciascuno, tra due consecutive  sostituzioni di bottiglia effettuate dal garzone.

    (Si supponga per semplicità che ogni volta che un amico accede alle bottiglie riempie per 
    intero il proprio boccale).
*/

mutex: mutex := 1
int bottiglia_birra, num_accessi, max_accessi_consentiti := 0;

semaphore bottiglia_vuota := 0

ProcessoAmico():
    while true:
        lock(mutex)
            if(bottiglia_birra == 0 || num_accessi > max_accessi_consentiti)
                signal(bottiglia_vuota)
            bottiglia_birra--
            num_accessi = 0
        unlock(mutex)

ProcessoGarzone():
    while true:
        wait(bottiglia_vuota)
        add_birra()
        bottiglia_birra++